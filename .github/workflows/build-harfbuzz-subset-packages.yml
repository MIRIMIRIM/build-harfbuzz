name: Build hb-subset

on:
  workflow_dispatch:

jobs:
  build:
    name: build-on-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        harfbuzz_ver: ['10.1.0']
        dotnet_version: ['9.x']
        os: [windows-latest, macos-latest]

    steps:
    - name: Check out code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet_version }}

    - name: Prepare
      run: |
        python -m pip install meson ninja
        git clone --recurse-submodules https://github.com/harfbuzz/harfbuzz.git -b ${{ matrix.harfbuzz_ver }} --depth=1 harfbuzz-${{ matrix.harfbuzz_ver }}

    - name: Setup msbuild (target windows arm64)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64_arm64

    - name: Build native library (win-arm64)
      if: matrix.os == 'windows-latest'
      run: |
        cd ./harfbuzz-${{ matrix.harfbuzz_ver }}
        python ../build/build.py win-arm64 all

    - name: Setup msbuild (target windows x64)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Build native library (win-x64)
      if: matrix.os == 'windows-latest'
      run: |
        cd ./harfbuzz-${{ matrix.harfbuzz_ver }}
        python ../build/build.py win-x64 all

    - name: Setup Zig Compiler (target linux)
      if: matrix.os == 'windows-latest'
      uses: mlugg/setup-zig@v1
      with:
        version: "master"

    - name: Configure (linux-musl)
      if: matrix.os == 'windows-latest'
      run: |
        cd ./harfbuzz-${{ matrix.harfbuzz_ver }}
        python ../build/build.py linux-musl-x64 all

    - name: Configure (linux-musl)
      if: matrix.os == 'windows-latest'
      run: |
        cd ./harfbuzz-${{ matrix.harfbuzz_ver }}
        python ../build/build.py linux-musl-arm64 all

    - name: Build native library (osx-arm64)
      if: matrix.os == 'macos-latest'
      run: |
        cd ./harfbuzz-${{ matrix.harfbuzz_ver }}
        python ../build/build.py osx-arm64 all

    - name: Build native library (osx-x64)
      if: matrix.os == 'macos-latest'
      run: |
        cd ./harfbuzz-${{ matrix.harfbuzz_ver }}
        python ../build/build.py osx-x64 all

    - name: Build nupkg (win and linux)
      if: matrix.os == 'windows-latest'
      run: |
        cd ./build
        mkdir pkg
        python gen-csproj.py win
        dotnet pack MIR.NativeLib.Harfbuzz.Static.Win.csproj -o ./pkg
        dotnet pack MIR.NativeLib.Harfbuzz.Shared.Win.csproj -o ./pkg
        python gen-csproj.py linux
        dotnet pack MIR.NativeLib.Harfbuzz.Static.Linux.csproj -o ./pkg
        dotnet pack MIR.NativeLib.Harfbuzz.Shared.Linux.csproj -o ./pkg

    - name: Build nupkg (osx)
      if: matrix.os == 'macos-latest'
      run: |
        cd ./build
        python gen-csproj.py mac
        dotnet pack MIR.NativeLib.Harfbuzz.Static.Mac.csproj -o ./pkg
        # dotnet pack MIR.NativeLib.Harfbuzz.Shared.Mac.csproj -o ./pkg

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artifact-${{ matrix.os }}
        path: ./build

    - name: Upload nuget packages
      run: |
        cd ./build/pkg
        dotnet nuget push *.nupkg --api-key ${{ secrets.NUGET_API_KEY }}  --source nuget.org --skip-duplicate
